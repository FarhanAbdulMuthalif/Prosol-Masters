import api from "@/components/api";

export const getAllPlantData = async (url: string) => {
  const response = await api.get(url);
  return response.data;
};
export const MasterSubFieldWithData = {
  Plant: {
    Plant: {
      getAll: "/plant/getAllPlant",
      getSingle: "/plant/getPlantById",
      create: "/plant/savePlant",
      createBulk: "/plant/ImportExcelDataPlant",
      updateStatus: "/plant/updatePlantStatusById",
      updateBulkStatus: "/plant/updateBulkStatusPlantId",
      template: "/plant/exportTemplatePlant",
      exportPdf: "/plant/pdfPlantReport",
      exportExcel: "/plant/exportDataPlant",
      delete: "/plant/deletePlant",
      deleteBulk: "/plant/deleteBatchPlant",
      update: "/plant/updatePlant",
      includePlantDropdown: false,
    },
    ProfitCenter: {
      getAll: "/plant/getAllProfitCenter",
      getSingle: "/plant/getProfitCenterById",
      create: "/plant/saveProfitCenter",
      createBulk: "/plant/ImportExcelDataProfit",
      updateStatus: "/plant/updateProfitCenterStatusById",
      updateBulkStatus: "/plant/updateBulkStatusProfitCentertId",
      template: "/plant/exportTemplateProfit",
      exportPdf: "/plant/pdfProfitCenterReport",
      exportExcel: "/plant/exportDataProfit",
      delete: "/plant/deleteProfitCenter",
      deleteBulk: "/plant/deleteBatchProfitCenter",
      update: "/plant/updateProfitCenter",
      includePlantDropdown: true,
    },
    PriceControl: {
      getAll: "/plant/getAllPriceControl",
      getSingle: "/plant/getPriceControlById",
      create: "/plant/savePriceControl",
      createBulk: "/plant/ImportExcelDataPrice",
      updateStatus: "/plant/updatePriceControlById",
      updateBulkStatus: "/plant/updateBulkStatusPriceControlId",
      template: "/plant/exportTemplatePrice",
      exportPdf: "/plant/pdfPriceControlReport",
      exportExcel: "/plant/exportDataPrice",
      delete: "/plant/deletePriceControl",
      deleteBulk: "/plant/deleteBatchPriceControl",
      update: "/plant/updatePriceControl",
      includePlantDropdown: false,
    },

    StorageLocation: {
      getAll: "/plant/getAllStorageLocation",
      getSingle: "/plant/getStorageLocationById",
      create: "/plant/saveStorageLocation",
      createBulk: "/plant/ImportExcelDataStorageLocation",
      updateStatus: "/plant/updateStorageLocationStatusById1",
      updateBulkStatus: "/plant/updateBulkStorageLocationId1",
      template: "/plant/exportTemplateStorageLocation",
      exportPdf: "/plant/pdfStorageLocationReport",
      exportExcel: "/plant/exportDataStorageLocation",
      delete: "/plant/deleteStorageLocation",
      deleteBulk: "/plant/deleteBatchStorageLocation",
      update: "/plant/updateStorageLocation",
      includePlantDropdown: true,
    },
    StorageBin: {
      getAll: "/plant/getAllStorageLocationBin",
      getSingle: "/plant/getStorageLocationBinById",
      create: "/plant/saveStorageLocationBin",
      createBulk: "/plant/ImportExcelDataStorageBin",
      updateStatus: "/plant/updateStorageLocationStatusById",
      updateBulkStatus: "/plant/updateBulkStorageLocationId",
      template: "/plant/exportTemplateStorageLocationBin",
      exportPdf: "/plant/pdfStorageBinReport",
      exportExcel: "/plant/exportDataStorageLocationBin",
      delete: "/plant/deleteStorageLocationBin",
      deleteBulk: "/plant/deleteBatchStorageLocationBin",
      update: "/plant/updateStorageLocationBin",
      includePlantDropdown: false,
    },
    ValuationCategory: {
      getAll: "/plant/getAllValuationCategory",
      getSingle: "/plant/getValuationCategoryById",
      create: "/plant/saveValuationCategory",
      createBulk: "/plant/ImportExcelDataValuationCategory",
      updateStatus: "/plant/updateValuationCategoryById",
      updateBulkStatus: "/plant/updateBulkStatusValuationCategoryId",
      template: "/plant/exportTemplateValuationCategory",
      exportPdf: "/plant/pdfValuationCategoryReport",
      exportExcel: "/plant/exportDataValuationCategory",
      delete: "/plant/deleteValuationCategory",
      deleteBulk: "/plant/deleteBatchValuationCategory",
      update: "/plant/updateValuationCategory",
      includePlantDropdown: false,
    },
    VarianceKey: {
      getAll: "/plant/getAllVarianceKey",
      getSingle: "/plant/getVarianceKeyById",
      create: "/plant/saveVarianceKey",
      createBulk: "/plant/ImportExcelDataVarianceKey",
      updateStatus: "/plant/updateVarianceKeyById",
      updateBulkStatus: "/plant/updateBulkStatusVarianceKeyId",
      template: "/plant/exportTemplateVarianceKey",
      exportPdf: "/plant/pdfVarianceKeyReport",
      exportExcel: "/plant/exportDataVarianceKey",
      delete: "/plant/deleteVarianceKey",
      deleteBulk: "/plant/deleteVarianceKey",
      update: "/plant/updateVarianceKey",
      includePlantDropdown: false,
    },
    ValuationClass: {
      getAll: "/plant/getAllValuationClass?showFull=false",
      getSingle: "/plant/getValuationClassById",
      create: "/plant/saveValuationClass",
      createBulk: "/plant/ImportExcelDataValuationClass",
      updateStatus: "/plant/updateValuationClassById",
      updateBulkStatus: "/plant/updateBulkStatusValuationClassId",
      template: "/plant/exportTemplateValuationClass",
      exportPdf: "/plant/pdfValuationClassReport",
      exportExcel: "/plant/exportDataValuationClass",
      delete: "/plant/deleteValuationClass",
      deleteBulk: "/plant/deleteBatchPriceControl",
      update: "/plant/updateValuationClass",
      includePlantDropdown: false,
    },

    Department: {
      getAll: "/plant/getAllDepartment",
      getSingle: "/plant/getDepartmentById",
      create: "/plant/saveDepartment",
      createBulk: "/plant/ImportExcelDataDepartment",
      updateStatus: "/plant/updateDepartmentStatusById",
      updateBulkStatus: "/plant/updateBulkStatusDepartmentId",
      template: "/plant/exportTemplateDept",
      exportPdf: "/plant/pdfDepartmentReport",
      exportExcel: "/plant/exportDataDept",
      delete: "/plant/deleteDepartment",
      deleteBulk: "/plant/deleteBatchDepartment",
      update: "/plant/updateDepartment",
      includePlantDropdown: false,
    },
  },
  General: {},
  MRPData: {},
};
